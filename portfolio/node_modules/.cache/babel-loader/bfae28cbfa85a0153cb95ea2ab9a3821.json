{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iler_\\\\Desktop\\\\Development\\\\IW\\\\portfolio\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as React from 'react';\nimport { Button, View, Text } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HomeScreen(_ref) {\n  _s();\n  var _route$params2, _route$params3;\n  let {\n    navigation,\n    route\n  } = _ref;\n  React.useEffect(() => {\n    var _route$params;\n    if ((_route$params = route.params) !== null && _route$params !== void 0 && _route$params.post) {\n      // Post updated, do something with `route.params.post`\n      // For example, send the post to the server\n    }\n  }, [(_route$params2 = route.params) === null || _route$params2 === void 0 ? void 0 : _route$params2.post]);\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      title: \"Create post\",\n      onPress: () => navigation.navigate('CreatePost')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      style: {\n        margin: 10\n      },\n      children: [\"Post: \", (_route$params3 = route.params) === null || _route$params3 === void 0 ? void 0 : _route$params3.post]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(HomeScreen, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = HomeScreen;\nfunction CreatePostScreen(_ref2) {\n  _s2();\n  let {\n    navigation,\n    route\n  } = _ref2;\n  const [postText, setPostText] = React.useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      multiline: true,\n      placeholder: \"What's on your mind?\",\n      style: {\n        height: 200,\n        padding: 10,\n        backgroundColor: 'white'\n      },\n      value: postText,\n      onChangeText: setPostText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Done\",\n      onPress: () => {\n        // Pass and merge params back to home screen\n        navigation.navigate({\n          name: 'Home',\n          params: {\n            post: postText\n          },\n          merge: true\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s2(CreatePostScreen, \"ADYhJdCFXHuG5KBF14lU8EYzQWw=\");\n_c2 = CreatePostScreen;\nconst Stack = createNativeStackNavigator();\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(NavigationContainer, {\n    children: /*#__PURE__*/_jsxDEV(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [/*#__PURE__*/_jsxDEV(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack.Screen, {\n        name: \"Details\",\n        component: DetailsScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"HomeScreen\");\n$RefreshReg$(_c2, \"CreatePostScreen\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","Button","View","Text","NavigationContainer","createNativeStackNavigator","HomeScreen","navigation","route","useEffect","params","post","flex","alignItems","justifyContent","navigate","margin","CreatePostScreen","postText","setPostText","useState","height","padding","backgroundColor","name","merge","Stack","App","DetailsScreen"],"sources":["C:/Users/Iler_/Desktop/Development/IW/portfolio/src/App.js"],"sourcesContent":["\nimport * as React from 'react';\nimport { Button, View, Text } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nfunction HomeScreen({ navigation, route }) {\n  React.useEffect(() => {\n    if (route.params?.post) {\n      // Post updated, do something with `route.params.post`\n      // For example, send the post to the server\n    }\n  }, [route.params?.post]);\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Button\n        title=\"Create post\"\n        onPress={() => navigation.navigate('CreatePost')}\n      />\n      <Text style={{ margin: 10 }}>Post: {route.params?.post}</Text>\n    </View>\n  );\n}\n\nfunction CreatePostScreen({ navigation, route }) {\n  const [postText, setPostText] = React.useState('');\n\n  return (\n    <>\n      <TextInput\n        multiline\n        placeholder=\"What's on your mind?\"\n        style={{ height: 200, padding: 10, backgroundColor: 'white' }}\n        value={postText}\n        onChangeText={setPostText}\n      />\n      <Button\n        title=\"Done\"\n        onPress={() => {\n          // Pass and merge params back to home screen\n          navigation.navigate({\n            name: 'Home',\n            params: { post: postText },\n            merge: true,\n          });\n        }}\n      />\n    </>\n  );\n}\n\nconst Stack = createNativeStackNavigator();\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"Details\" component={DetailsScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;"],"mappings":";;;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,EAAEC,IAAI,EAAEC,IAAI,QAAQ,cAAc;AACjD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAAC;AAAA;AAE5E,SAASC,UAAU,OAAwB;EAAA;EAAA;EAAA,IAAvB;IAAEC,UAAU;IAAEC;EAAM,CAAC;EACvCR,KAAK,CAACS,SAAS,CAAC,MAAM;IAAA;IACpB,qBAAID,KAAK,CAACE,MAAM,0CAAZ,cAAcC,IAAI,EAAE;MACtB;MACA;IACF;EACF,CAAC,EAAE,mBAACH,KAAK,CAACE,MAAM,mDAAZ,eAAcC,IAAI,CAAC,CAAC;EAExB,oBACE,QAAC,IAAI;IAAC,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAA,wBACvE,QAAC,MAAM;MACL,KAAK,EAAC,aAAa;MACnB,OAAO,EAAE,MAAMP,UAAU,CAACQ,QAAQ,CAAC,YAAY;IAAE;MAAA;MAAA;MAAA;IAAA,QACjD,eACF,QAAC,IAAI;MAAC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAE;MAAA,uCAAQR,KAAK,CAACE,MAAM,mDAAZ,eAAcC,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACzD;AAEX;AAAC,GAjBQL,UAAU;AAAA,KAAVA,UAAU;AAmBnB,SAASW,gBAAgB,QAAwB;EAAA;EAAA,IAAvB;IAAEV,UAAU;IAAEC;EAAM,CAAC;EAC7C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,KAAK,CAACoB,QAAQ,CAAC,EAAE,CAAC;EAElD,oBACE;IAAA,wBACE,QAAC,SAAS;MACR,SAAS;MACT,WAAW,EAAC,sBAAsB;MAClC,KAAK,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEC,OAAO,EAAE,EAAE;QAAEC,eAAe,EAAE;MAAQ,CAAE;MAC9D,KAAK,EAAEL,QAAS;MAChB,YAAY,EAAEC;IAAY;MAAA;MAAA;MAAA;IAAA,QAC1B,eACF,QAAC,MAAM;MACL,KAAK,EAAC,MAAM;MACZ,OAAO,EAAE,MAAM;QACb;QACAZ,UAAU,CAACQ,QAAQ,CAAC;UAClBS,IAAI,EAAE,MAAM;UACZd,MAAM,EAAE;YAAEC,IAAI,EAAEO;UAAS,CAAC;UAC1BO,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;IAAE;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACD;AAEP;AAAC,IAzBQR,gBAAgB;AAAA,MAAhBA,gBAAgB;AA2BzB,MAAMS,KAAK,GAAGrB,0BAA0B,EAAE;AAE1C,SAASsB,GAAG,GAAG;EACb,oBACE,QAAC,mBAAmB;IAAA,uBAClB,QAAC,KAAK,CAAC,SAAS;MAAC,gBAAgB,EAAC,MAAM;MAAA,wBACtC,QAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAErB;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eACnD,QAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,SAAS;QAAC,SAAS,EAAEsB;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACzC;IAAA;IAAA;IAAA;EAAA,QACE;AAE1B;AAAC,MATQD,GAAG;AAWZ,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}