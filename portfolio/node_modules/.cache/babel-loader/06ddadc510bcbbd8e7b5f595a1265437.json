{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { Dimensions, StyleSheet } from 'react-native';\nimport { NativeSafeAreaProvider } from './NativeSafeAreaProvider';\nconst isDev = process.env.NODE_ENV !== 'production';\nexport const SafeAreaInsetsContext = /*#__PURE__*/React.createContext(null);\nif (isDev) {\n  SafeAreaInsetsContext.displayName = 'SafeAreaInsetsContext';\n}\nexport const SafeAreaFrameContext = /*#__PURE__*/React.createContext(null);\nif (isDev) {\n  SafeAreaFrameContext.displayName = 'SafeAreaFrameContext';\n}\nexport function SafeAreaProvider(_ref) {\n  let {\n    children,\n    initialMetrics,\n    initialSafeAreaInsets,\n    style,\n    ...others\n  } = _ref;\n  const parentInsets = useParentSafeAreaInsets();\n  const parentFrame = useParentSafeAreaFrame();\n  const [insets, setInsets] = React.useState((initialMetrics === null || initialMetrics === void 0 ? void 0 : initialMetrics.insets) ?? initialSafeAreaInsets ?? parentInsets ?? null);\n  const [frame, setFrame] = React.useState((initialMetrics === null || initialMetrics === void 0 ? void 0 : initialMetrics.frame) ?? parentFrame ?? {\n    // Backwards compat so we render anyway if we don't have frame.\n    x: 0,\n    y: 0,\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  });\n  const onInsetsChange = React.useCallback(event => {\n    const {\n      nativeEvent: {\n        frame: nextFrame,\n        insets: nextInsets\n      }\n    } = event;\n    if (\n    // Backwards compat with old native code that won't send frame.\n    nextFrame && (nextFrame.height !== frame.height || nextFrame.width !== frame.width || nextFrame.x !== frame.x || nextFrame.y !== frame.y)) {\n      setFrame(nextFrame);\n    }\n    if (!insets || nextInsets.bottom !== insets.bottom || nextInsets.left !== insets.left || nextInsets.right !== insets.right || nextInsets.top !== insets.top) {\n      setInsets(nextInsets);\n    }\n  }, [frame, insets]);\n  return /*#__PURE__*/React.createElement(NativeSafeAreaProvider, _extends({\n    style: [styles.fill, style],\n    onInsetsChange: onInsetsChange\n  }, others), insets != null ? /*#__PURE__*/React.createElement(SafeAreaFrameContext.Provider, {\n    value: frame\n  }, /*#__PURE__*/React.createElement(SafeAreaInsetsContext.Provider, {\n    value: insets\n  }, children)) : null);\n}\nconst styles = StyleSheet.create({\n  fill: {\n    flex: 1\n  }\n});\nfunction useParentSafeAreaInsets() {\n  return React.useContext(SafeAreaInsetsContext);\n}\nfunction useParentSafeAreaFrame() {\n  return React.useContext(SafeAreaFrameContext);\n}\nconst NO_INSETS_ERROR = 'No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.';\nexport function useSafeAreaInsets() {\n  const safeArea = React.useContext(SafeAreaInsetsContext);\n  if (safeArea == null) {\n    throw new Error(NO_INSETS_ERROR);\n  }\n  return safeArea;\n}\nexport function useSafeAreaFrame() {\n  const frame = React.useContext(SafeAreaFrameContext);\n  if (frame == null) {\n    throw new Error(NO_INSETS_ERROR);\n  }\n  return frame;\n}\nexport function withSafeAreaInsets(WrappedComponent) {\n  return /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SafeAreaInsetsContext.Consumer, null, insets => {\n    if (insets == null) {\n      throw new Error(NO_INSETS_ERROR);\n    }\n    return /*#__PURE__*/React.createElement(WrappedComponent, _extends({}, props, {\n      insets: insets,\n      ref: ref\n    }));\n  }));\n}\n/**\n * @deprecated\n */\n\nexport function useSafeArea() {\n  return useSafeAreaInsets();\n}\n/**\n * @deprecated\n */\n\nexport const SafeAreaConsumer = SafeAreaInsetsContext.Consumer;\n/**\n * @deprecated\n */\n\nexport const SafeAreaContext = SafeAreaInsetsContext;","map":{"version":3,"mappings":"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","names":["React","Dimensions","StyleSheet","NativeSafeAreaProvider","isDev","process","env","NODE_ENV","SafeAreaInsetsContext","createContext","displayName","SafeAreaFrameContext","SafeAreaProvider","children","initialMetrics","initialSafeAreaInsets","style","others","parentInsets","useParentSafeAreaInsets","parentFrame","useParentSafeAreaFrame","insets","setInsets","useState","frame","setFrame","x","y","width","get","height","onInsetsChange","useCallback","event","nativeEvent","nextFrame","nextInsets","bottom","left","right","top","styles","fill","Provider","value","create","flex","useContext","NO_INSETS_ERROR","useSafeAreaInsets","safeArea","Error","useSafeAreaFrame","withSafeAreaInsets","WrappedComponent","forwardRef","props","ref","Consumer","useSafeArea","SafeAreaConsumer","SafeAreaContext"],"sources":["C:\\Users\\Iler_\\Desktop\\Development\\IW\\portfolio\\node_modules\\react-native-safe-area-context\\lib\\module\\SafeAreaContext.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Dimensions, StyleSheet, ViewProps } from 'react-native';\nimport { NativeSafeAreaProvider } from './NativeSafeAreaProvider';\nimport type {\n  EdgeInsets,\n  InsetChangedEvent,\n  Metrics,\n  Rect,\n} from './SafeArea.types';\n\nconst isDev = process.env.NODE_ENV !== 'production';\n\nexport const SafeAreaInsetsContext = React.createContext<EdgeInsets | null>(\n  null,\n);\nif (isDev) {\n  SafeAreaInsetsContext.displayName = 'SafeAreaInsetsContext';\n}\n\nexport const SafeAreaFrameContext = React.createContext<Rect | null>(null);\nif (isDev) {\n  SafeAreaFrameContext.displayName = 'SafeAreaFrameContext';\n}\n\nexport interface SafeAreaProviderProps extends ViewProps {\n  children?: React.ReactNode;\n  initialMetrics?: Metrics | null;\n  /**\n   * @deprecated\n   */\n  initialSafeAreaInsets?: EdgeInsets | null;\n}\n\nexport function SafeAreaProvider({\n  children,\n  initialMetrics,\n  initialSafeAreaInsets,\n  style,\n  ...others\n}: SafeAreaProviderProps) {\n  const parentInsets = useParentSafeAreaInsets();\n  const parentFrame = useParentSafeAreaFrame();\n  const [insets, setInsets] = React.useState<EdgeInsets | null>(\n    initialMetrics?.insets ?? initialSafeAreaInsets ?? parentInsets ?? null,\n  );\n  const [frame, setFrame] = React.useState<Rect>(\n    initialMetrics?.frame ??\n      parentFrame ?? {\n        // Backwards compat so we render anyway if we don't have frame.\n        x: 0,\n        y: 0,\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,\n      },\n  );\n  const onInsetsChange = React.useCallback(\n    (event: InsetChangedEvent) => {\n      const {\n        nativeEvent: { frame: nextFrame, insets: nextInsets },\n      } = event;\n\n      if (\n        // Backwards compat with old native code that won't send frame.\n        nextFrame &&\n        (nextFrame.height !== frame.height ||\n          nextFrame.width !== frame.width ||\n          nextFrame.x !== frame.x ||\n          nextFrame.y !== frame.y)\n      ) {\n        setFrame(nextFrame);\n      }\n\n      if (\n        !insets ||\n        nextInsets.bottom !== insets.bottom ||\n        nextInsets.left !== insets.left ||\n        nextInsets.right !== insets.right ||\n        nextInsets.top !== insets.top\n      ) {\n        setInsets(nextInsets);\n      }\n    },\n    [frame, insets],\n  );\n\n  return (\n    <NativeSafeAreaProvider\n      style={[styles.fill, style]}\n      onInsetsChange={onInsetsChange}\n      {...others}\n    >\n      {insets != null ? (\n        <SafeAreaFrameContext.Provider value={frame}>\n          <SafeAreaInsetsContext.Provider value={insets}>\n            {children}\n          </SafeAreaInsetsContext.Provider>\n        </SafeAreaFrameContext.Provider>\n      ) : null}\n    </NativeSafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fill: { flex: 1 },\n});\n\nfunction useParentSafeAreaInsets(): EdgeInsets | null {\n  return React.useContext(SafeAreaInsetsContext);\n}\n\nfunction useParentSafeAreaFrame(): Rect | null {\n  return React.useContext(SafeAreaFrameContext);\n}\n\nconst NO_INSETS_ERROR =\n  'No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.';\n\nexport function useSafeAreaInsets(): EdgeInsets {\n  const safeArea = React.useContext(SafeAreaInsetsContext);\n  if (safeArea == null) {\n    throw new Error(NO_INSETS_ERROR);\n  }\n  return safeArea;\n}\n\nexport function useSafeAreaFrame(): Rect {\n  const frame = React.useContext(SafeAreaFrameContext);\n  if (frame == null) {\n    throw new Error(NO_INSETS_ERROR);\n  }\n  return frame;\n}\n\nexport type WithSafeAreaInsetsProps = {\n  insets: EdgeInsets;\n};\n\nexport function withSafeAreaInsets<T>(\n  WrappedComponent: React.ComponentType<T & WithSafeAreaInsetsProps>,\n): React.ForwardRefExoticComponent<\n  React.PropsWithoutRef<T> & React.RefAttributes<unknown>\n> {\n  return React.forwardRef((props: T, ref: React.Ref<unknown>) => (\n    <SafeAreaInsetsContext.Consumer>\n      {(insets) => {\n        if (insets == null) {\n          throw new Error(NO_INSETS_ERROR);\n        }\n        return <WrappedComponent {...props} insets={insets} ref={ref} />;\n      }}\n    </SafeAreaInsetsContext.Consumer>\n  ));\n}\n\n/**\n * @deprecated\n */\nexport function useSafeArea(): EdgeInsets {\n  return useSafeAreaInsets();\n}\n\n/**\n * @deprecated\n */\nexport const SafeAreaConsumer = SafeAreaInsetsContext.Consumer;\n\n/**\n * @deprecated\n */\nexport const SafeAreaContext = SafeAreaInsetsContext;\n"]},"metadata":{},"sourceType":"module"}